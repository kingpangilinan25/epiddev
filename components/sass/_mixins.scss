// _mixins
// ========
@mixin backImage($image) {
  background: url($image) no-repeat 50% 20% ; 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
 
  -webkit-transition: all 0.3s ease-out;
  -moz-transition: all 0.3s ease-out;
  -o-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
 
  @media (min-width: 801px) {
   height: 350px;
  }
 
  @media (max-width: 800px) {
   height: 150px;
  }
 
  @media (max-width: 300px) {
   height: 100px;
  }
}
 
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin list-reset() {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

@mixin em() {
  color: $gold2;
  font-size: $em-size;
  font-style: normal;
}

// Example usage of rem-px mixin
//
// @include rem-px(font-size, 1.8);
// font-size: 18px;
// font-size: 1.8rem;
//
// @include rem-px(padding, 1, 0, 5, 0);
// padding: 10px 0 50px 0;
// padding: 1rem 0 5rem 0;

@mixin rem-px($property, $remValues...) {
  $pxs: ();
  $rems: ();

  @each $value in $remValues {
    $pxs: append($pxs, $value*10+px, space);
    $rems: append($rems, $value+rem, space);
  }

  #{$property}: $pxs;
  #{$property}: $rems;
}

@mixin centerer($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}

@mixin headerbgtext {  
    @include rem-px(font-size, 2.3);
    font-family: $headFont;
    text-transform: uppercase;
    position: relative;
    z-index: 1;
}
@mixin hbgtfront {  
      z-index: 2;
      position: relative;
      display: block;
      text-shadow: -2px 0 0px 1px #fff;
      @include rem-px(padding, 0, 0.3);
      
      @include media('screen', '>=tab') {
        @include rem-px(font-size, 2);
      }
      @include media('screen', '>=tab', '<laptopl') {
        @include rem-px(font-size, 2);
      }
      @include media('screen', '>=laptopl') {
        @include rem-px(font-size, 3);
      }
}
@mixin hbgtback {  
      z-index: 1;
      position: absolute;
      left: 0;
      top: -14%;
      line-height: 1;
      white-space: nowrap;
      text-transform:  uppercase;
      @include centerer;
      color: rgba(33,33,33,0.05);
      @include rem-px(font-size, 6);
      
      @include media('screen', '>=tab') {
        //top: -2rem;
        //left: -4rem;
        @include rem-px(font-size, 8);
      }
}


// Ghost button from http://www.developerdrive.com/2014/11/15-essential-sass-mixins/

// usage div {
// @include ghost-button(#ffffff, #000, 5px, #34dec6, 4px, 300ms, #000000 );
// }
@mixin ghost-button($font-color: blue, $background: none, $border-size: 0, $border-color:transparent, $transition-speed: 300ms, $hover-color: black) {
   display:inline-block;
   text-decoration:none;
   text-transform:uppercase;
   color:$font-color;
    background: $background;
   border:$border-size solid $border-color;
   -webkit-transition: color $transition-speed, background $transition-speed;
   transition: color $transition-speed, background $transition-speed;
   &:hover
   {
   background:$border-color;
   color:$hover-color;
   }
 }

@mixin flexcenter {  
      display: flex;
      align-items: center;
}

@mixin gradient-blue {  
  
  background-color: #114394;
  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#114394+0,11a7bf+100 */
  background: #114394; /* Old browsers */
  background: -moz-linear-gradient(left, #124494 0%, #10b5c5 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(left, #124494 0%,#10b5c5 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, #124494 0%,#10b5c5 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#124494', endColorstr='#10b5c5',GradientType=1 ); /* IE6-9 */
}